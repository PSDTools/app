---
name: Dart

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
  merge_group:
  schedule:
    - cron: "0 14 * * 1" # every monday at 9 in the morning CST
  workflow_dispatch:

env:
  CI: true

permissions:
  contents: read

jobs:
  build:
    name: Build
    needs: []
    timeout-minutes: 5
    runs-on: ubuntu-latest

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          submodules: true
      - name: 🐦 Set up Flutter
        uses: subosito/flutter-action@48cafc24713cca54bbe03cdc3a423187d413aafa # v2.10.0
        with:
          channel: "stable"
          cache: true
      - name: 📦 Install dependencies
        run: flutter pub get
      - name: 🔌 Generate Dart Defines
        run: dart run dart_define generate --FLAVOR=production
      - name: 🔌 Generate files
        run: dart run build_runner build
      - name: 🔧 Build
        run: flutter build web --target lib/main_production.dart --release --dart-define-from-file=dart_define.json
      - name: ⚙️ Upload generated files
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: generated-files
          path: |
            lib/**/*.g.dart
            lib/**/*.gr.dart
            lib/**/*.gm.dart
            lib/**/*.freezed.dart
          if-no-files-found: error
      - name: ⚙️ Upload build
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: build-directory
          path: ./build
          if-no-files-found: error

  lint:
    name: Linting
    needs: ["build"]
    timeout-minutes: 5
    runs-on: ubuntu-latest

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          submodules: true
      - name: 🐦 Set up Flutter
        uses: subosito/flutter-action@48cafc24713cca54bbe03cdc3a423187d413aafa # v2.10.0
        with:
          channel: "stable"
          cache: true
      - name: 📦 Install dependencies
        run: flutter pub get
      - name: ⚙️ Download generated code
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: generated-files
          path: lib
      - name: 🔌 Generate Dart Defines
        run: dart run dart_define generate --FLAVOR=production
      - name: 🕵️ Analyze project source
        run: flutter analyze --fatal-infos
      - name: 🕵️ Lint Riverpod
        run: dart run custom_lint

  test:
    name: Testing
    needs: ["build"]
    timeout-minutes: 5
    runs-on: ubuntu-latest

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          submodules: true
      - name: 🐦 Set up Flutter
        uses: subosito/flutter-action@48cafc24713cca54bbe03cdc3a423187d413aafa # v2.10.0
        with:
          channel: "stable"
          cache: true
      - name: 📦 Install dependencies
        run: flutter pub get
      - name: ⚙️ Download generated code
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: generated-files
          path: lib
      - name: 🔌 Generate Dart Defines
        run: dart run dart_define generate --FLAVOR=production
      - name: 🧪 Run tests
        run: flutter test -j 4 --coverage --test-randomize-ordering-seed random --dart-define-from-file=dart_define.json
      - name: 📊 Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@e5c91bc7ce9843e87c800b3bcafdfb86fbe28491 # v2.1.0
        with:
          path: coverage/lcov.info
          min_coverage: 10 # 100
          exclude: "**/*.gen.dart **/*.freezed.dart **/*.g.dart **/*.gr.dart **/*.gm.dart **/gen/**"

  format:
    name: Formatting
    needs: ["build"]
    timeout-minutes: 3
    runs-on: ubuntu-latest

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          submodules: true
      - name: 🐦 Set up Flutter
        uses: subosito/flutter-action@48cafc24713cca54bbe03cdc3a423187d413aafa # v2.10.0
        with:
          channel: "stable"
          cache: true
      - name: ✨ Verify formatting
        run: dart format --output=none --set-exit-if-changed .

  deploy:
    name: Deployment
    needs: ["build", "lint", "test"]
    if: ${{ github.event_name != 'merge_group' }}
    timeout-minutes: 3
    runs-on: ubuntu-latest

    environment: ${{ ( github.event_name == 'pull_request' && 'integration' ) || 'staging' }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      deployments: write

    steps:
      - name: 🔌 Start deployment
        uses: bobheadxi/deployments@88ce5600046c82542f8246ac287d0a53c461bca3 # v1.4.0
        id: deployment
        with:
          env: ${{ github.event_name == 'pull_request' && 'integration' || 'staging' }}
          token: ${{ secrets.GITHUB_TOKEN }}
          step: start
      - name: ⚙️ Download the build artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: build-directory
          path: ./build
      - name: 🔧 Deploy to Netlify
        uses: South-Paw/action-netlify-cli@8e99164b59ca8343c925aacd05a44d3ffa3718fa # v1.0.1
        id: netlify
        with:
          # be sure to escape any double quotes with a backslash and note that the --json
          # flag has been passed when deploying - if you want the outputs to work you'll need to include it
          args: deploy --json ${{ github.ref == 'refs/heads/main' && '--prod'  }}  --dir \"./build/web\" --message \"${{ (github.event_name == 'pull_request' && 'draft') || 'production'  }} [${{ github.sha }}]\"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      - name: 🔌 Finish deployment
        uses: bobheadxi/deployments@88ce5600046c82542f8246ac287d0a53c461bca3 # v1.4.0
        if: always()
        with:
          env: ${{ steps.deployment.outputs.env }}
          step: finish
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{ steps.netlify.outputs.NETLIFY_PROD_URL }}
