---
name: Dart

env:
  CI: true

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build:
    name: Build
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    needs: []
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3.5.2
        with:
          submodules: true
      - name: Set up Flutter
        uses: subosito/flutter-action@v2.10.0
        with:
          channel: "stable"
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Build
        run: flutter build web

  check:
    name: Linting
    needs: ["build"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3.5.2
        with:
          submodules: true
      - name: Set up Flutter
        uses: subosito/flutter-action@v2.10.0
        with:
          channel: "stable"
          cache: true
      - name: Install dependencies
        run: flutter pub get
        # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: flutter analyze
      # - name: DCM
      #   uses: dart-code-checker/dart-code-metrics-action@v3.0.0
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     pull_request_comment: true
      #     check_unused_files: true
      - name: Lint Riverpod
        run: dart run custom_lint

  test:
    name: Testing
    needs: ["build"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3.5.2
        with:
          submodules: true
      - name: Set up Flutter
        uses: subosito/flutter-action@v2.10.0
        with:
          channel: "stable"
          cache: true
      - name: Install dependencies
        run: flutter pub get
      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: flutter test

  formst:
    name: Formatting
    needs: ["build"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3.5.2
        with:
          submodules: true
      - name: Set up Flutter
        uses: subosito/flutter-action@v2.10.0
        with:
          channel: "stable"
          cache: true
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
