# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.5.2

      - uses: subosito/flutter-action@v2.10.0
        with:
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

  check:
    name: Linting
    needs: ["build"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

        # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: flutter analyze

      - name: DCM
        uses: dart-code-checker/dart-code-metrics-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Testing
    needs: ["build"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.5.2

      - uses: subosito/flutter-action@v2.10.0
        with:
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: flutter test

  formst:
    name: Formatting
    needs: ["build"]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.5.2

      - uses: subosito/flutter-action@v2.10.0
        with:
          channel: "stable"
          cache: true

      # Uncomment this step to verify the use of 'dart format' on each commit.
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
