{
  "version": "2.0.0",
  "tasks": [
    {
      "type": "dart",
      "command": "dart",
      "cwd": ".",
      "args": [
        "run",
        "build_runner",
        "${input:runtype}"
      ],
      "problemMatcher": [
        "$dart-build_runner"
      ],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "label": "Dart: run build_runner",
      "detail": "Run a build_runner task.",
      "runOptions": {
        "runOn": "folderOpen"
      },
      "icon": {
        "color": "terminal.ansiCyan",
        "id": "gear"
      },
      "dependsOn": [
        "Dart: run dart_define",
        "Flutter: gen-l10n"
      ]
    },
    {
      "type": "dart",
      "command": "dart",
      "cwd": ".",
      "args": [
        "run",
        "dart_define",
        "generate",
        "--no-gitignore"
      ],
      "problemMatcher": [],
      "group": "build",
      "label": "Dart: run dart_define",
      "detail": "Generate dart-defines.",
      "runOptions": {
        "runOn": "folderOpen"
      },
      "icon": {
        "color": "terminal.ansiMagenta",
        "id": "gear"
      }
    },
    {
      "type": "dart",
      "command": "dart",
      "cwd": ".",
      "args": [
        "doc",
        "."
      ],
      "problemMatcher": [],
      "group": "none",
      "label": "Dart: doc",
      "detail": "View the documentation.",
      "icon": {
        "color": "terminal.ansiGreen",
        "id": "book"
      },
      "dependsOn": [
        "Dart: run build_runner"
      ]
    },
    {
      "type": "flutter",
      "command": "flutter",
      "args": [
        "build",
        "${input:target}",
        "--release",
        "--dart-define-from-file=dart_define.json",
      ],
      "problemMatcher": [],
      "group": "build",
      "label": "Flutter: build",
      "detail": "Build a flutter app.",
      "icon": {
        "color": "terminal.ansiBlue",
        "id": "gear"
      },
      "dependsOn": [
        "Dart: run build_runner"
      ]
    },
    {
      "type": "flutter",
      "command": "flutter",
      "args": [
        "gen-l10n"
      ],
      "problemMatcher": [],
      "group": "build",
      "label": "Flutter: gen-l10n",
      "detail": "Generate the localization files.",
      "icon": {
        "color": "terminal.ansiYellow",
        "id": "comment-discussion"
      }
    },
    {
      "type": "flutter",
      "command": "flutter",
      "args": [
        "build",
        "${input:target}",
        "--release",
        "--dart-define-from-file=dart_define.json",
      ],
      "problemMatcher": [],
      "group": "build",
      "label": "Flutter: build",
      "detail": "Build a flutter app.",
      "icon": {
        "color": "terminal.ansiBlue",
        "id": "gear"
      },
      "dependsOn": [
        "Dart: run build_runner"
      ]
    },
    {
      "type": "dart",
      "command": "dart",
      "cwd": ".",
      "args": [
        "run",
        "very_good_cli:very_good",
        "test",
        "--coverage",
        "--test-randomize-ordering-seed",
        "random"
      ],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "label": "Very Good Test",
      "detail": "Run tests with the very_good_cli.",
      "icon": {
        "color": "terminal.ansiWhite",
        "id": "beaker"
      },
      "dependsOn": [
        "Dart: run build_runner"
      ]
    }
  ],
  "inputs": [
    {
      "id": "target",
      "options": [
        { "label": "Repository", "value": "arr" },
        { "label": "Android APK", "value": "apk" },
        { "label": "Android App Bundle", "value": "appbundle" },
        { "label": "Flutter assets directory", "value": "bundle" },
        { "label": "iOS", "value": "ios" },
        { "label": ".xcframework (iOS)", "value": "ios-framework" },
        { "label": "App Store Bundle", "value": "ipa" },
        { "label": "macOS", "value": "macos" },
        { "label": ".xcframework (macOS)", "value": "macos-framework" },
        { "label": "Webapp bundle", "value": "web" },
        { "label": "Windows", "value": "windows" }
      ],
      "type": "pickString",
      "description": "the target to target",
      "default": "web"
    },
    {
      "id": "runtype",
      "options": [
        { "label": "run a build", "value": "build" },
        { "label": "watch the filesystem, run many builds", "value": "watch" },
        { "label": "make a server", "value": "serve" },
        { "label": "run our tests", "value": "test" },
        { "label": "run just one build, not all of them", "value": "run" },
        { "label": "clean up from old builds", "value": "clean" }
      ],
      "type": "pickString",
      "description": "the type of build_runner run",
      "default": "watch"
    }
  ]
}
